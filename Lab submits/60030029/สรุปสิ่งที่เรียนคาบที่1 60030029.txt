+++++ภาคทฤษฎี (เริ่มเรียนในสไลด์หน้าที่31)++++++
EnCapsulation
-เรียนเรื่อง Abstack Data Type 
ว่าเป็นไทคที่สร้างขึ้นมาใหม่เพื่อแก้ปัญหาการเก็บข้อมูลบางอย่างที่ตัวแปลที่มีอยู่เก็บไม่ได้ เช่นๆ ตัวแปลแอฟแตรก "Data D1 = วัน/เดือน/ปี"
โดยการสร้างนั้น ต้องสร้างทั้ง 1.ข้อมูลที่จะเก็บ และ 2.ฟังก์ชั่นการทำงานของไทคนั้น เช่น Data จะเก็บ 1.วัน/เดือน/ปี 2.เก็บฟังชั่นการบวกลบวัน
โดยการที่มีทั้ง1และ2อยู่ในก้อนเดียวกันแหละคือการEnCapsulationด้วย

-เรียนเรื่อง API (Application Program Interface)
ว่าเป็นหลักการแสดงแค่ส่วนที่สำคัญ ไม่แสดงหมดมันเยอะเดี๋ยวเขางง 
ซึ่งก็คือการEnCapsulation ให้คนอื่นเห็นแค่บางส่วนเท่านั้น เช่นส่วนที่ใช้งาน (หากปล่อยv.แสดงมาแล้ว v.ต่อไปปิดไม่แสดงจะมีปัญหา)

-เรียนเรื่องฟังชั่นConstructor (เครื่องมือสร้าง)
เป็นการสร้างวัตถุ และมีการกำหนดค่าเริ่มต้นให้กับตัวแปลที่ว่างเปล่านั้นให้มีค่าเริ่มต้น (1970ปีคอมเกิด)
โดยเมื่อมีการสร้างวัตถุ (*วงจรชีวิตของวัตถุ*)
1.ระบบจะใช้ฟังชั้นConstructorจองหน่วยความจำ(กำหนดค่าเริ่มต้นด้วย)
2.เมื่อใช้เสร็จ ระบบจะใช้ฟังชั้่นDestructorคืนหน่วยความจำที่ยืมมา หากไม่คืนแคสเต็มคอมค้าง

-เรียนเรื่ององค์ประกอบของวัตถุ
นั้นประกอบไปด้วย2ส่วน
1ข้อมูลที่เก็บ(Abstack Data Type ) 
2จะเป็นฟังชั่นการทำงานโดยมี3แบบ 1.ส่วนตัว 2.ส่วนตัวแต่คนในใช้ได้ 3.สาธารณะ

-เรียนเรื่อง Inheritance (การสืบทอดมา)
subclass คือ classที่เอาcodeทั้งหมดมาจากคลาสต้นแบบ(สืบทอดมาเพื่อเพิ่มความสามารถ)
*Polymophism (ชื่อฟังชั่นเหมือนแต่ทำงานต่างกันรุ่นลูก)* 
โดยการสืบทอดของรุ่นลูกหรือซับคลาสนั้นจะได้ codeทั้งหมดของพ่อแม่ซึ่ง ทำให้มีบางฟังชั่นที่สืบทอดมาและทำการเพิ่มหรือเปลี่ยนไป 
ดังนั้นชื่อฟังชั่นจะเหมือนกัน แต่ทำงานต่างกันเรียกว่า Polymophism เช่น การคิดพื้นที่ของซับคลาส วงกลม สี่เหลี่ยมในฟังชั่นการคิดพื้นที่
โดยการทำแบบนี้เป็นการบังคับไปด้วยว่า ซับคลาสนั้นต้องมีฟังชั่นนี้นะ 

-เรียนเรื่องstrong typing หรือคือ การซีเรียสกับไทคข้อมูล จะเอาไทคขนาดใหญ่ใส่เข้าไปในไทคเล็กไม่ได้ 
แต่ไทคเล็กใส่เข้าไทคใหญ่ได้เรียกว่า(weak typing)

-ใกล้จบแล้วๆ
Concurremy>ออฟเจค อัพเดรทตัวเอง ต่างคนต่างแยกทำงานตัวเอง
Peristence>เก็บทุกอว่างก่อนปิดคอมไว้เป็นออฟเจค พอเปิดมาใหม่จะเหมือนเดิม

+++++ภาคปฏิบัติ++++++
-การทำlab1
มีการสร้าง OrgในRepoตัวเองก่อนการForkRepoอาจารย์ โดยการFork งานมาทำมีวิธีการดังนั้น
0.สร้างOrgของตัวเองขึ้นมาก่อน
1.ForkRepoอาจารย์มาไว้ใน Orgของตัวเอง
2.Clone Repoนั้นมาไว้ที่เครื่อง โดยมีการใช้งาน GithabDeskTop
3.จากนั้นเข้าไปที่โฟรเดอร์ Lab Submit > สร้างโฟรเดอร์ส่งงานของตัวเอง"60030029"
4.หลังจากทำงานในโฟรเดอร์ส่งงานของตัวเองเสร็จ ก็ใช้GithabDeskTop commit pushไปที่RepoตัวเองในOrg
5.จากนั้นPull Request
** ดูรูปประกอบ

-การอัพเดรท Repoตัว และ โฟรเดอร์ส่งงานของตัวเองในpc 
1.เข้าไปในโฟรเดอร์ที่cloneมา (week1)
2.คลิ๊กขวาเลือก Git Bash Hero
3.พิมพ์คำสั่ง1git remote -v
	2 git fetch upstream
	3 git pull upstream master
	4 git push origin master


















 
